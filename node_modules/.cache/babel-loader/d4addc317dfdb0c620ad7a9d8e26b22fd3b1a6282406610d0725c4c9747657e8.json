{"ast":null,"code":"var _jsxFileName = \"/home/fabrizia/HNG-Internship-X/stage-2/movie-discovery-app/src/components/card.js\",\n  _s = $RefreshSig$();\nimport React, { useState, use } from 'react';\nimport { Link } from 'react-router-dom';\nimport HeartIcon from './fav';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card({\n  movie\n}) {\n  _s();\n  console.log('Movie data:', movie);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [genres, setGenres] = useState([]);\n  const toggleFavorite = e => {\n    e.preventDefault(); // Prevent the default link behavior\n    setIsFavorite(!isFavorite);\n  };\n  useEffect(() => {\n    async function fetchGenres() {\n      try {\n        const response = await axios.get('https://api.themoviedb.org/3/genre/movie/list', {\n          params: {\n            api_key: '9724ee7735f6229f16425966d22d4ff6'\n          }\n        });\n        setGenres(response.data.genres);\n      } catch (error) {\n        console.error('Error fetching genres:', error);\n      }\n    }\n    fetchGenres();\n  }, []);\n\n  // Function to get genre names based on genre IDs\n  const getGenreNames = () => {\n    return movie.genre_ids.map(genreId => {\n      const genre = genres.find(genre => genre.id === genreId);\n      return genre ? genre.name : '';\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-card\",\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/movies/${movie.id}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n          alt: movie.title,\n          \"data-testid\": \"movie-poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `favorite-icon ${isFavorite ? 'favorite' : ''}`,\n          onClick: toggleFavorite,\n          children: /*#__PURE__*/_jsxDEV(HeartIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        \"data-testid\": \"movie-title\",\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"movie-release-date\",\n        children: movie.release_date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"movie-type\",\n        children: movie.genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"KLgtadv3/qL/ouQQNZ+R7U0Eb94=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","use","Link","HeartIcon","axios","jsxDEV","_jsxDEV","Card","movie","_s","console","log","isFavorite","setIsFavorite","genres","setGenres","toggleFavorite","e","preventDefault","useEffect","fetchGenres","response","get","params","api_key","data","error","getGenreNames","genre_ids","map","genreId","genre","find","id","name","className","children","to","src","poster_path","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","release_date","_c","$RefreshReg$"],"sources":["/home/fabrizia/HNG-Internship-X/stage-2/movie-discovery-app/src/components/card.js"],"sourcesContent":["import React, { useState, use } from 'react';\nimport { Link } from 'react-router-dom';\nimport HeartIcon from './fav';\nimport axios from 'axios';\n\n\nfunction Card({ movie }) {\n  console.log('Movie data:', movie);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [genres, setGenres] = useState([]);\n\n  const toggleFavorite = (e) => {\n    e.preventDefault(); // Prevent the default link behavior\n    setIsFavorite(!isFavorite);\n  };\n\n  useEffect(() => {\n    async function fetchGenres() {\n      try {\n        const response = await axios.get(\n          'https://api.themoviedb.org/3/genre/movie/list',\n          {\n            params: {\n              api_key: '9724ee7735f6229f16425966d22d4ff6',\n            },\n          }\n        );\n        setGenres(response.data.genres);\n      } catch (error) {\n        console.error('Error fetching genres:', error);\n      }\n    }\n\n    fetchGenres();\n  }, []);\n\n  // Function to get genre names based on genre IDs\n  const getGenreNames = () => {\n    return movie.genre_ids.map((genreId) => {\n      const genre = genres.find((genre) => genre.id === genreId);\n      return genre ? genre.name : '';\n    });\n  };\n\n  return (\n    <div className=\"movie-card\">\n      <Link to={`/movies/${movie.id}`}>\n        {/* Container for the image and HeartIcon */}\n        <div className=\"image-container\">\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n            alt={movie.title}\n            data-testid=\"movie-poster\"\n          />\n          {/* Position the HeartIcon in the top right corner */}\n          <div className={`favorite-icon ${isFavorite ? 'favorite' : ''}`} onClick={toggleFavorite}>\n            <HeartIcon />\n          </div>\n        </div>\n        <h2 data-testid=\"movie-title\">{movie.title}</h2>\n        <p data-testid=\"movie-release-date\">{movie.release_date}</p>\n        <p className=\"movie-type\">{movie.genre}</p>\n      </Link>\n    </div>\n  );\n}\n\nexport default Card;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}